{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from Config where Enabled=1",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SetConfig",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.Value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().Source,'ERP')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter1').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@bool(equals(item().Incremental_FullLoad,1))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Copy SCR to STG full load",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "Select * from @{item().Name}",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "AzureSqlSink",
												"tableOption": "autoCreate"
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "SRC_AzureSQLTable",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "STG_tables",
												"type": "DatasetReference",
												"parameters": {
													"TableName": "@{item().Name}"
												}
											}
										]
									},
									{
										"name": "Get Max LastUpDate_copy1",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "Copy SCR to STG full load",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "select max(Last_Update_Date) as maxD from @{item().Name}",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "STG_tables",
												"type": "DatasetReference",
												"parameters": {
													"TableName": "@{item().Name}"
												}
											}
										}
									},
									{
										"name": "Lookup4Update max las update in CFG_copy1",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "Get Max LastUpDate_copy1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@update Config set MaxLastUpdateDate ='@{activity('Get Max LastUpDate_copy1').output.firstRow.maxD} where Name like '@{item().Name}' \n\nselect '1'",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "SetConfig",
												"type": "DatasetReference"
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Get_Max_Lastupdate_from_CFG",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "Select MaxLastUpdateDate from Config where Name like '@(item().Name)'",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "SetConfig",
												"type": "DatasetReference"
											}
										}
									},
									{
										"name": "Copy_SRC_To_STG_Incremental",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Get_Max_Lastupdate_from_CFG",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "select * from @{item().Name} where Convert(varchar(max),Last_Update_Date,120) >substring(replace('@{activity('Get_Max_Lastupdate_from_CFG').output.firtsRow.MaxLastUpdateDate}','T',' '),0,20),120)",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "AzureSqlSink",
												"tableOption": "autoCreate"
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "SetConfig",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "STG_tables",
												"type": "DatasetReference",
												"parameters": {
													"TableName": "@{item().Name}"
												}
											}
										]
									},
									{
										"name": "Get Max LastUpDate",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "Copy_SRC_To_STG_Incremental",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "select max(Last_Update_Date) as maxD from @{item().Name}",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "STG_tables",
												"type": "DatasetReference",
												"parameters": {
													"TableName": "@{item().Name}"
												}
											}
										}
									},
									{
										"name": "Lookup4Update max las update in CFG",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "Get Max LastUpDate",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@update Config set MaxLastUpdateDate ='@{activity('Get Max LastUpDate').output.firstRow.maxD} where Name like '@{item().Name}' \n\nselect '1'",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "SetConfig",
												"type": "DatasetReference"
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"folder": {
			"name": "tutorial"
		},
		"annotations": [],
		"lastPublishTime": "2020-08-23T18:33:16Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}